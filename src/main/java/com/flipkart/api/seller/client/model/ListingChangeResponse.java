package com.flipkart.api.seller.client.model;

/*
 * listings-common-v3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.flipkart.api.seller.client.model.AttributeError;
import com.flipkart.api.seller.client.model.Error;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.flipkart.api.seller.client.JSON;


/**
 * ListingChangeResponse
 */
@JsonPropertyOrder({
    ListingChangeResponse.JSON_PROPERTY_STATUS,
    ListingChangeResponse.JSON_PROPERTY_ERRORS,
    ListingChangeResponse.JSON_PROPERTY_ATTRIBUTE_ERRORS
})

public class ListingChangeResponse {
  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    SUCCESS("SUCCESS"),

    FAILURE("FAILURE"),

    WARNING("WARNING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_ERRORS = "errors";
  private List<Error> errors = new ArrayList<>();

  public static final String JSON_PROPERTY_ATTRIBUTE_ERRORS = "attribute_errors";
  private List<AttributeError> attributeErrors = new ArrayList<>();

  public ListingChangeResponse() {
  }

  public ListingChangeResponse status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public ListingChangeResponse errors(List<Error> errors) {
    this.errors = errors;
    return this;
  }

  public ListingChangeResponse addErrorsItem(Error errorsItem) {
    this.errors.add(errorsItem);
    return this;
  }

  /**
   * Get errors
   * @return errors
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Error> getErrors() {
    return errors;
  }


  @JsonProperty(JSON_PROPERTY_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setErrors(List<Error> errors) {
    this.errors = errors;
  }


  public ListingChangeResponse attributeErrors(List<AttributeError> attributeErrors) {
    this.attributeErrors = attributeErrors;
    return this;
  }

  public ListingChangeResponse addAttributeErrorsItem(AttributeError attributeErrorsItem) {
    this.attributeErrors.add(attributeErrorsItem);
    return this;
  }

  /**
   * Get attributeErrors
   * @return attributeErrors
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AttributeError> getAttributeErrors() {
    return attributeErrors;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTE_ERRORS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttributeErrors(List<AttributeError> attributeErrors) {
    this.attributeErrors = attributeErrors;
  }


  /**
   * Return true if this ListingChangeResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListingChangeResponse listingChangeResponse = (ListingChangeResponse) o;
    return Objects.equals(this.status, listingChangeResponse.status) &&
        Objects.equals(this.errors, listingChangeResponse.errors) &&
        Objects.equals(this.attributeErrors, listingChangeResponse.attributeErrors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, errors, attributeErrors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListingChangeResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    errors: ").append(toIndentedString(errors)).append("\n");
    sb.append("    attributeErrors: ").append(toIndentedString(attributeErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


