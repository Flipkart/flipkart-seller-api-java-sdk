/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipkart.api.seller.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * SelfShipReturnAttemptPickupRequest
 */

public class SelfShipReturnAttemptPickupRequest {
  @JsonProperty("returnId")
  private String returnId = null;

  @JsonProperty("pickupDate")
  private OffsetDateTime pickupDate = null;

  @JsonProperty("newPickupDate")
  private OffsetDateTime newPickupDate = null;

  @JsonProperty("reason")
  private String reason = null;

  public SelfShipReturnAttemptPickupRequest returnId(String returnId) {
    this.returnId = returnId;
    return this;
  }

   /**
   * Get returnId
   * @return returnId
  **/
  @ApiModelProperty(value = "")
  public String getReturnId() {
    return returnId;
  }

  public void setReturnId(String returnId) {
    this.returnId = returnId;
  }

  public SelfShipReturnAttemptPickupRequest pickupDate(OffsetDateTime pickupDate) {
    this.pickupDate = pickupDate;
    return this;
  }

   /**
   * Get pickupDate
   * @return pickupDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getPickupDate() {
    return pickupDate;
  }

  public void setPickupDate(OffsetDateTime pickupDate) {
    this.pickupDate = pickupDate;
  }

  public SelfShipReturnAttemptPickupRequest newPickupDate(OffsetDateTime newPickupDate) {
    this.newPickupDate = newPickupDate;
    return this;
  }

   /**
   * Get newPickupDate
   * @return newPickupDate
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getNewPickupDate() {
    return newPickupDate;
  }

  public void setNewPickupDate(OffsetDateTime newPickupDate) {
    this.newPickupDate = newPickupDate;
  }

  public SelfShipReturnAttemptPickupRequest reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * Get reason
   * @return reason
  **/
  @ApiModelProperty(value = "")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SelfShipReturnAttemptPickupRequest selfShipReturnAttemptPickupRequest = (SelfShipReturnAttemptPickupRequest) o;
    return Objects.equals(this.returnId, selfShipReturnAttemptPickupRequest.returnId) &&
        Objects.equals(this.pickupDate, selfShipReturnAttemptPickupRequest.pickupDate) &&
        Objects.equals(this.newPickupDate, selfShipReturnAttemptPickupRequest.newPickupDate) &&
        Objects.equals(this.reason, selfShipReturnAttemptPickupRequest.reason);
  }

  @Override
  public int hashCode() {
    return Objects.hash(returnId, pickupDate, newPickupDate, reason);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SelfShipReturnAttemptPickupRequest {\n");
    
    sb.append("    returnId: ").append(toIndentedString(returnId)).append("\n");
    sb.append("    pickupDate: ").append(toIndentedString(pickupDate)).append("\n");
    sb.append("    newPickupDate: ").append(toIndentedString(newPickupDate)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

