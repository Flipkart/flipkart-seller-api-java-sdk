package com.flipkart.api.seller.client.model;

/*
 * listings-flipkart-v3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.flipkart.api.seller.client.JSON;


/**
 * DatingLabel
 */
@JsonPropertyOrder({
    DatingLabel.JSON_PROPERTY_MFG_DATE,
    DatingLabel.JSON_PROPERTY_SHELF_LIFE,
    DatingLabel.JSON_PROPERTY_EXPIRY_DATE
})

public class DatingLabel {
  public static final String JSON_PROPERTY_MFG_DATE = "mfg_date";
  private Long mfgDate;

  public static final String JSON_PROPERTY_SHELF_LIFE = "shelf_life";
  private Long shelfLife;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  private Long expiryDate;

  public DatingLabel() {
  }

  public DatingLabel mfgDate(Long mfgDate) {
    this.mfgDate = mfgDate;
    return this;
  }

  /**
   * Get mfgDate
   * minimum: 0
   * @return mfgDate
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MFG_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getMfgDate() {
    return mfgDate;
  }


  @JsonProperty(JSON_PROPERTY_MFG_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMfgDate(Long mfgDate) {
    this.mfgDate = mfgDate;
  }


  public DatingLabel shelfLife(Long shelfLife) {
    this.shelfLife = shelfLife;
    return this;
  }

  /**
   * Get shelfLife
   * @return shelfLife
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SHELF_LIFE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getShelfLife() {
    return shelfLife;
  }


  @JsonProperty(JSON_PROPERTY_SHELF_LIFE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShelfLife(Long shelfLife) {
    this.shelfLife = shelfLife;
  }


  public DatingLabel expiryDate(Long expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

  /**
   * Get expiryDate
   * @return expiryDate
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(Long expiryDate) {
    this.expiryDate = expiryDate;
  }


  /**
   * Return true if this DatingLabel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DatingLabel datingLabel = (DatingLabel) o;
    return Objects.equals(this.mfgDate, datingLabel.mfgDate) &&
        Objects.equals(this.shelfLife, datingLabel.shelfLife) &&
        Objects.equals(this.expiryDate, datingLabel.expiryDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mfgDate, shelfLife, expiryDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DatingLabel {\n");
    sb.append("    mfgDate: ").append(toIndentedString(mfgDate)).append("\n");
    sb.append("    shelfLife: ").append(toIndentedString(shelfLife)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

