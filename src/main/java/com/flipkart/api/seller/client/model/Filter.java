/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipkart.api.seller.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.flipkart.api.seller.client.model.DateFilter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * Filter
 */

public class Filter {
  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    PREDISPATCH("preDispatch"),
    
    POSTDISPATCH("postDispatch"),
    
    CANCELLED("cancelled");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  /**
   * Gets or Sets states
   */
  public enum StatesEnum {
    APPROVED("APPROVED"),
    
    PACKING_IN_PROGRESS("PACKING_IN_PROGRESS"),
    
    FORM_FAILED("FORM_FAILED"),
    
    PACKED("PACKED"),
    
    READY_TO_DISPATCH("READY_TO_DISPATCH"),
    
    PICKUP_COMPLETE("PICKUP_COMPLETE"),
    
    CANCELLED("CANCELLED"),
    
    RETURN_REQUESTED("RETURN_REQUESTED"),
    
    RETURNED("RETURNED"),
    
    SHIPPED("SHIPPED"),
    
    DELIVERED("DELIVERED"),
    
    COMPLETED("COMPLETED");

    private String value;

    StatesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatesEnum fromValue(String value) {
      for (StatesEnum b : StatesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("states")
  private List<StatesEnum> states = null;

  @JsonProperty("locationId")
  private String locationId = null;

  @JsonProperty("sku")
  private List<String> sku = null;

  @JsonProperty("orderDate")
  private DateFilter orderDate = null;

  @JsonProperty("dispatchAfterDate")
  private DateFilter dispatchAfterDate = null;

  @JsonProperty("dispatchByDate")
  private DateFilter dispatchByDate = null;

  @JsonProperty("modifiedDate")
  private DateFilter modifiedDate = null;

  /**
   * Gets or Sets shipmentTypes
   */
  public enum ShipmentTypesEnum {
    EXPRESS("EXPRESS"),
    
    NORMAL("NORMAL"),
    
    SELF("SELF");

    private String value;

    ShipmentTypesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ShipmentTypesEnum fromValue(String value) {
      for (ShipmentTypesEnum b : ShipmentTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("shipmentTypes")
  private List<ShipmentTypesEnum> shipmentTypes = null;

  /**
   * Gets or Sets serviceProfiles
   */
  public enum ServiceProfilesEnum {
    FBF("FBF"),
    
    NON_FBF("NON_FBF"),
    
    FBF_LITE("FBF_LITE");

    private String value;

    ServiceProfilesEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ServiceProfilesEnum fromValue(String value) {
      for (ServiceProfilesEnum b : ServiceProfilesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("serviceProfiles")
  private List<ServiceProfilesEnum> serviceProfiles = null;

  /**
   * Gets or Sets dispatchServiceTiers
   */
  public enum DispatchServiceTiersEnum {
    EXPRESS("EXPRESS"),
    
    REGULAR("REGULAR");

    private String value;

    DispatchServiceTiersEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DispatchServiceTiersEnum fromValue(String value) {
      for (DispatchServiceTiersEnum b : DispatchServiceTiersEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("dispatchServiceTiers")
  private List<DispatchServiceTiersEnum> dispatchServiceTiers = null;

  @JsonProperty("cancellationDate")
  private DateFilter cancellationDate = null;

  /**
   * Gets or Sets cancellationType
   */
  public enum CancellationTypeEnum {
    SELLERCANCELLATION("sellerCancellation"),
    
    BUYERCANCELLATION("buyerCancellation"),
    
    MARKETPLACECANCELLATION("marketplaceCancellation");

    private String value;

    CancellationTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CancellationTypeEnum fromValue(String value) {
      for (CancellationTypeEnum b : CancellationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("cancellationType")
  private CancellationTypeEnum cancellationType = null;

  public Filter type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Filter states(List<StatesEnum> states) {
    this.states = states;
    return this;
  }

  public Filter addStatesItem(StatesEnum statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<StatesEnum>();
    }
    this.states.add(statesItem);
    return this;
  }

   /**
   * Get states
   * @return states
  **/
  @ApiModelProperty(value = "")
  public List<StatesEnum> getStates() {
    return states;
  }

  public void setStates(List<StatesEnum> states) {
    this.states = states;
  }

  public Filter locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @ApiModelProperty(value = "")
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }

  public Filter sku(List<String> sku) {
    this.sku = sku;
    return this;
  }

  public Filter addSkuItem(String skuItem) {
    if (this.sku == null) {
      this.sku = new ArrayList<String>();
    }
    this.sku.add(skuItem);
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @ApiModelProperty(value = "")
  public List<String> getSku() {
    return sku;
  }

  public void setSku(List<String> sku) {
    this.sku = sku;
  }

  public Filter orderDate(DateFilter orderDate) {
    this.orderDate = orderDate;
    return this;
  }

   /**
   * Get orderDate
   * @return orderDate
  **/
  @ApiModelProperty(value = "")
  public DateFilter getOrderDate() {
    return orderDate;
  }

  public void setOrderDate(DateFilter orderDate) {
    this.orderDate = orderDate;
  }

  public Filter dispatchAfterDate(DateFilter dispatchAfterDate) {
    this.dispatchAfterDate = dispatchAfterDate;
    return this;
  }

   /**
   * Get dispatchAfterDate
   * @return dispatchAfterDate
  **/
  @ApiModelProperty(value = "")
  public DateFilter getDispatchAfterDate() {
    return dispatchAfterDate;
  }

  public void setDispatchAfterDate(DateFilter dispatchAfterDate) {
    this.dispatchAfterDate = dispatchAfterDate;
  }

  public Filter dispatchByDate(DateFilter dispatchByDate) {
    this.dispatchByDate = dispatchByDate;
    return this;
  }

   /**
   * Get dispatchByDate
   * @return dispatchByDate
  **/
  @ApiModelProperty(value = "")
  public DateFilter getDispatchByDate() {
    return dispatchByDate;
  }

  public void setDispatchByDate(DateFilter dispatchByDate) {
    this.dispatchByDate = dispatchByDate;
  }

  public Filter modifiedDate(DateFilter modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @ApiModelProperty(value = "")
  public DateFilter getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(DateFilter modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public Filter shipmentTypes(List<ShipmentTypesEnum> shipmentTypes) {
    this.shipmentTypes = shipmentTypes;
    return this;
  }

  public Filter addShipmentTypesItem(ShipmentTypesEnum shipmentTypesItem) {
    if (this.shipmentTypes == null) {
      this.shipmentTypes = new ArrayList<ShipmentTypesEnum>();
    }
    this.shipmentTypes.add(shipmentTypesItem);
    return this;
  }

   /**
   * Get shipmentTypes
   * @return shipmentTypes
  **/
  @ApiModelProperty(value = "")
  public List<ShipmentTypesEnum> getShipmentTypes() {
    return shipmentTypes;
  }

  public void setShipmentTypes(List<ShipmentTypesEnum> shipmentTypes) {
    this.shipmentTypes = shipmentTypes;
  }

  public Filter serviceProfiles(List<ServiceProfilesEnum> serviceProfiles) {
    this.serviceProfiles = serviceProfiles;
    return this;
  }

  public Filter addServiceProfilesItem(ServiceProfilesEnum serviceProfilesItem) {
    if (this.serviceProfiles == null) {
      this.serviceProfiles = new ArrayList<ServiceProfilesEnum>();
    }
    this.serviceProfiles.add(serviceProfilesItem);
    return this;
  }

   /**
   * Get serviceProfiles
   * @return serviceProfiles
  **/
  @ApiModelProperty(value = "")
  public List<ServiceProfilesEnum> getServiceProfiles() {
    return serviceProfiles;
  }

  public void setServiceProfiles(List<ServiceProfilesEnum> serviceProfiles) {
    this.serviceProfiles = serviceProfiles;
  }

  public Filter dispatchServiceTiers(List<DispatchServiceTiersEnum> dispatchServiceTiers) {
    this.dispatchServiceTiers = dispatchServiceTiers;
    return this;
  }

  public Filter addDispatchServiceTiersItem(DispatchServiceTiersEnum dispatchServiceTiersItem) {
    if (this.dispatchServiceTiers == null) {
      this.dispatchServiceTiers = new ArrayList<DispatchServiceTiersEnum>();
    }
    this.dispatchServiceTiers.add(dispatchServiceTiersItem);
    return this;
  }

   /**
   * Get dispatchServiceTiers
   * @return dispatchServiceTiers
  **/
  @ApiModelProperty(value = "")
  public List<DispatchServiceTiersEnum> getDispatchServiceTiers() {
    return dispatchServiceTiers;
  }

  public void setDispatchServiceTiers(List<DispatchServiceTiersEnum> dispatchServiceTiers) {
    this.dispatchServiceTiers = dispatchServiceTiers;
  }

  public Filter cancellationDate(DateFilter cancellationDate) {
    this.cancellationDate = cancellationDate;
    return this;
  }

   /**
   * Get cancellationDate
   * @return cancellationDate
  **/
  @ApiModelProperty(value = "")
  public DateFilter getCancellationDate() {
    return cancellationDate;
  }

  public void setCancellationDate(DateFilter cancellationDate) {
    this.cancellationDate = cancellationDate;
  }

  public Filter cancellationType(CancellationTypeEnum cancellationType) {
    this.cancellationType = cancellationType;
    return this;
  }

   /**
   * Get cancellationType
   * @return cancellationType
  **/
  @ApiModelProperty(value = "")
  public CancellationTypeEnum getCancellationType() {
    return cancellationType;
  }

  public void setCancellationType(CancellationTypeEnum cancellationType) {
    this.cancellationType = cancellationType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Filter filter = (Filter) o;
    return Objects.equals(this.type, filter.type) &&
        Objects.equals(this.states, filter.states) &&
        Objects.equals(this.locationId, filter.locationId) &&
        Objects.equals(this.sku, filter.sku) &&
        Objects.equals(this.orderDate, filter.orderDate) &&
        Objects.equals(this.dispatchAfterDate, filter.dispatchAfterDate) &&
        Objects.equals(this.dispatchByDate, filter.dispatchByDate) &&
        Objects.equals(this.modifiedDate, filter.modifiedDate) &&
        Objects.equals(this.shipmentTypes, filter.shipmentTypes) &&
        Objects.equals(this.serviceProfiles, filter.serviceProfiles) &&
        Objects.equals(this.dispatchServiceTiers, filter.dispatchServiceTiers) &&
        Objects.equals(this.cancellationDate, filter.cancellationDate) &&
        Objects.equals(this.cancellationType, filter.cancellationType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, states, locationId, sku, orderDate, dispatchAfterDate, dispatchByDate, modifiedDate, shipmentTypes, serviceProfiles, dispatchServiceTiers, cancellationDate, cancellationType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Filter {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    orderDate: ").append(toIndentedString(orderDate)).append("\n");
    sb.append("    dispatchAfterDate: ").append(toIndentedString(dispatchAfterDate)).append("\n");
    sb.append("    dispatchByDate: ").append(toIndentedString(dispatchByDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    shipmentTypes: ").append(toIndentedString(shipmentTypes)).append("\n");
    sb.append("    serviceProfiles: ").append(toIndentedString(serviceProfiles)).append("\n");
    sb.append("    dispatchServiceTiers: ").append(toIndentedString(dispatchServiceTiers)).append("\n");
    sb.append("    cancellationDate: ").append(toIndentedString(cancellationDate)).append("\n");
    sb.append("    cancellationType: ").append(toIndentedString(cancellationType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

