package com.flipkart.api.seller.client.model;

/*
 * listings-common-v3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.flipkart.api.seller.client.JSON;


/**
 * Price
 */
@JsonPropertyOrder({
    Price.JSON_PROPERTY_MRP,
    Price.JSON_PROPERTY_SELLING_PRICE,
    Price.JSON_PROPERTY_MOP,
    Price.JSON_PROPERTY_NLC,
    Price.JSON_PROPERTY_DEALER_PRICE,
    Price.JSON_PROPERTY_CURRENCY
})

public class Price {
  public static final String JSON_PROPERTY_MRP = "mrp";
  private Integer mrp;

  public static final String JSON_PROPERTY_SELLING_PRICE = "selling_price";
  private Integer sellingPrice;

  public static final String JSON_PROPERTY_MOP = "mop";
  private Integer mop;

  public static final String JSON_PROPERTY_NLC = "nlc";
  private Integer nlc;

  public static final String JSON_PROPERTY_DEALER_PRICE = "dealer_price";
  private Integer dealerPrice;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public Price() {
  }

  public Price mrp(Integer mrp) {
    this.mrp = mrp;
    return this;
  }

  /**
   * Get mrp
   * minimum: 0
   * @return mrp
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_MRP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getMrp() {
    return mrp;
  }


  @JsonProperty(JSON_PROPERTY_MRP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMrp(Integer mrp) {
    this.mrp = mrp;
  }


  public Price sellingPrice(Integer sellingPrice) {
    this.sellingPrice = sellingPrice;
    return this;
  }

  /**
   * Get sellingPrice
   * minimum: 0
   * @return sellingPrice
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SELLING_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSellingPrice() {
    return sellingPrice;
  }


  @JsonProperty(JSON_PROPERTY_SELLING_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSellingPrice(Integer sellingPrice) {
    this.sellingPrice = sellingPrice;
  }


  public Price mop(Integer mop) {
    this.mop = mop;
    return this;
  }

  /**
   * Get mop
   * @return mop
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMop() {
    return mop;
  }


  @JsonProperty(JSON_PROPERTY_MOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMop(Integer mop) {
    this.mop = mop;
  }


  public Price nlc(Integer nlc) {
    this.nlc = nlc;
    return this;
  }

  /**
   * Get nlc
   * @return nlc
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NLC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNlc() {
    return nlc;
  }


  @JsonProperty(JSON_PROPERTY_NLC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNlc(Integer nlc) {
    this.nlc = nlc;
  }


  public Price dealerPrice(Integer dealerPrice) {
    this.dealerPrice = dealerPrice;
    return this;
  }

  /**
   * Get dealerPrice
   * @return dealerPrice
   **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEALER_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDealerPrice() {
    return dealerPrice;
  }


  @JsonProperty(JSON_PROPERTY_DEALER_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDealerPrice(Integer dealerPrice) {
    this.dealerPrice = dealerPrice;
  }


  public Price currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "INR", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  /**
   * Return true if this Price object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Price price = (Price) o;
    return Objects.equals(this.mrp, price.mrp) &&
        Objects.equals(this.sellingPrice, price.sellingPrice) &&
        Objects.equals(this.mop, price.mop) &&
        Objects.equals(this.nlc, price.nlc) &&
        Objects.equals(this.dealerPrice, price.dealerPrice) &&
        Objects.equals(this.currency, price.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mrp, sellingPrice, mop, nlc, dealerPrice, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Price {\n");
    sb.append("    mrp: ").append(toIndentedString(mrp)).append("\n");
    sb.append("    sellingPrice: ").append(toIndentedString(sellingPrice)).append("\n");
    sb.append("    mop: ").append(toIndentedString(mop)).append("\n");
    sb.append("    nlc: ").append(toIndentedString(nlc)).append("\n");
    sb.append("    dealerPrice: ").append(toIndentedString(dealerPrice)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


