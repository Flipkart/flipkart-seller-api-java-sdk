package com.flipkart.api.seller.client.model;

/*
 * listings-common-v3
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.flipkart.api.seller.client.JSON;


/**
 * ShippingFees
 */
@JsonPropertyOrder({
    ShippingFees.JSON_PROPERTY_LOCAL,
    ShippingFees.JSON_PROPERTY_ZONAL,
    ShippingFees.JSON_PROPERTY_NATIONAL,
    ShippingFees.JSON_PROPERTY_CURRENCY
})

public class ShippingFees {
  public static final String JSON_PROPERTY_LOCAL = "local";
  private Integer local;

  public static final String JSON_PROPERTY_ZONAL = "zonal";
  private Integer zonal;

  public static final String JSON_PROPERTY_NATIONAL = "national";
  private Integer national;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  private String currency;

  public ShippingFees() {
  }

  public ShippingFees local(Integer local) {
    this.local = local;
    return this;
  }

  /**
   * Get local
   * minimum: 0
   * @return local
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLocal() {
    return local;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocal(Integer local) {
    this.local = local;
  }


  public ShippingFees zonal(Integer zonal) {
    this.zonal = zonal;
    return this;
  }

  /**
   * Get zonal
   * minimum: 0
   * @return zonal
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ZONAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getZonal() {
    return zonal;
  }


  @JsonProperty(JSON_PROPERTY_ZONAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setZonal(Integer zonal) {
    this.zonal = zonal;
  }


  public ShippingFees national(Integer national) {
    this.national = national;
    return this;
  }

  /**
   * Get national
   * minimum: 0
   * @return national
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NATIONAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNational() {
    return national;
  }


  @JsonProperty(JSON_PROPERTY_NATIONAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNational(Integer national) {
    this.national = national;
  }


  public ShippingFees currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "INR", required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(String currency) {
    this.currency = currency;
  }


  /**
   * Return true if this ShippingFees object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingFees shippingFees = (ShippingFees) o;
    return Objects.equals(this.local, shippingFees.local) &&
        Objects.equals(this.zonal, shippingFees.zonal) &&
        Objects.equals(this.national, shippingFees.national) &&
        Objects.equals(this.currency, shippingFees.currency);
  }

  @Override
  public int hashCode() {
    return Objects.hash(local, zonal, national, currency);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingFees {\n");
    sb.append("    local: ").append(toIndentedString(local)).append("\n");
    sb.append("    zonal: ").append(toIndentedString(zonal)).append("\n");
    sb.append("    national: ").append(toIndentedString(national)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


