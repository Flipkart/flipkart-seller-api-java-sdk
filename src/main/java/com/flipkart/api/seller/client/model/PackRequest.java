/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.flipkart.api.seller.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.flipkart.api.seller.client.model.Invoice;
import com.flipkart.api.seller.client.model.SerialNumber;
import com.flipkart.api.seller.client.model.SubShipments;
import com.flipkart.api.seller.client.model.TaxItem;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * PackRequest
 */

public class PackRequest {
  @JsonProperty("shipmentId")
  private String shipmentId = null;

  @JsonProperty("locationId")
  private String locationId = null;

  @JsonProperty("taxItems")
  private List<TaxItem> taxItems = null;

  @JsonProperty("serialNumbers")
  private List<SerialNumber> serialNumbers = null;

  @JsonProperty("invoices")
  private List<Invoice> invoices = null;

  @JsonProperty("subShipments")
  private List<SubShipments> subShipments = null;

  @JsonProperty("ignoreWarning")
  private Boolean ignoreWarning = null;

  public PackRequest shipmentId(String shipmentId) {
    this.shipmentId = shipmentId;
    return this;
  }

   /**
   * Get shipmentId
   * @return shipmentId
  **/
  @ApiModelProperty(value = "")
  public String getShipmentId() {
    return shipmentId;
  }

  public void setShipmentId(String shipmentId) {
    this.shipmentId = shipmentId;
  }

  public PackRequest locationId(String locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @ApiModelProperty(value = "")
  public String getLocationId() {
    return locationId;
  }

  public void setLocationId(String locationId) {
    this.locationId = locationId;
  }

  public PackRequest taxItems(List<TaxItem> taxItems) {
    this.taxItems = taxItems;
    return this;
  }

  public PackRequest addTaxItemsItem(TaxItem taxItemsItem) {
    if (this.taxItems == null) {
      this.taxItems = new ArrayList<TaxItem>();
    }
    this.taxItems.add(taxItemsItem);
    return this;
  }

   /**
   * Get taxItems
   * @return taxItems
  **/
  @ApiModelProperty(value = "")
  public List<TaxItem> getTaxItems() {
    return taxItems;
  }

  public void setTaxItems(List<TaxItem> taxItems) {
    this.taxItems = taxItems;
  }

  public PackRequest serialNumbers(List<SerialNumber> serialNumbers) {
    this.serialNumbers = serialNumbers;
    return this;
  }

  public PackRequest addSerialNumbersItem(SerialNumber serialNumbersItem) {
    if (this.serialNumbers == null) {
      this.serialNumbers = new ArrayList<SerialNumber>();
    }
    this.serialNumbers.add(serialNumbersItem);
    return this;
  }

   /**
   * Get serialNumbers
   * @return serialNumbers
  **/
  @ApiModelProperty(value = "")
  public List<SerialNumber> getSerialNumbers() {
    return serialNumbers;
  }

  public void setSerialNumbers(List<SerialNumber> serialNumbers) {
    this.serialNumbers = serialNumbers;
  }

  public PackRequest invoices(List<Invoice> invoices) {
    this.invoices = invoices;
    return this;
  }

  public PackRequest addInvoicesItem(Invoice invoicesItem) {
    if (this.invoices == null) {
      this.invoices = new ArrayList<Invoice>();
    }
    this.invoices.add(invoicesItem);
    return this;
  }

   /**
   * Get invoices
   * @return invoices
  **/
  @ApiModelProperty(value = "")
  public List<Invoice> getInvoices() {
    return invoices;
  }

  public void setInvoices(List<Invoice> invoices) {
    this.invoices = invoices;
  }

  public PackRequest subShipments(List<SubShipments> subShipments) {
    this.subShipments = subShipments;
    return this;
  }

  public PackRequest addSubShipmentsItem(SubShipments subShipmentsItem) {
    if (this.subShipments == null) {
      this.subShipments = new ArrayList<SubShipments>();
    }
    this.subShipments.add(subShipmentsItem);
    return this;
  }

   /**
   * Get subShipments
   * @return subShipments
  **/
  @ApiModelProperty(value = "")
  public List<SubShipments> getSubShipments() {
    return subShipments;
  }

  public void setSubShipments(List<SubShipments> subShipments) {
    this.subShipments = subShipments;
  }

  public PackRequest ignoreWarning(Boolean ignoreWarning) {
    this.ignoreWarning = ignoreWarning;
    return this;
  }

   /**
   * Get ignoreWarning
   * @return ignoreWarning
  **/
  @ApiModelProperty(value = "")
  public Boolean isIgnoreWarning() {
    return ignoreWarning;
  }

  public void setIgnoreWarning(Boolean ignoreWarning) {
    this.ignoreWarning = ignoreWarning;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PackRequest packRequest = (PackRequest) o;
    return Objects.equals(this.shipmentId, packRequest.shipmentId) &&
        Objects.equals(this.locationId, packRequest.locationId) &&
        Objects.equals(this.taxItems, packRequest.taxItems) &&
        Objects.equals(this.serialNumbers, packRequest.serialNumbers) &&
        Objects.equals(this.invoices, packRequest.invoices) &&
        Objects.equals(this.subShipments, packRequest.subShipments) &&
        Objects.equals(this.ignoreWarning, packRequest.ignoreWarning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(shipmentId, locationId, taxItems, serialNumbers, invoices, subShipments, ignoreWarning);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PackRequest {\n");
    
    sb.append("    shipmentId: ").append(toIndentedString(shipmentId)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    taxItems: ").append(toIndentedString(taxItems)).append("\n");
    sb.append("    serialNumbers: ").append(toIndentedString(serialNumbers)).append("\n");
    sb.append("    invoices: ").append(toIndentedString(invoices)).append("\n");
    sb.append("    subShipments: ").append(toIndentedString(subShipments)).append("\n");
    sb.append("    ignoreWarning: ").append(toIndentedString(ignoreWarning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

